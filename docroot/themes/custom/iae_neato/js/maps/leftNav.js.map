{"version":3,"file":"../leftNav.js","sources":["leftNav.js"],"sourcesContent":["/**\n * @file\n * Juilliard - Left Nav Behaviors\n *\n * @type {{attach: Drupal.behaviors.leftNav.attach}}\n */\n\n(function ($) {\n  'use strict';\n\n  // Wrap code in a function to make variables local.\n  Drupal.leftNavC = function () {\n    var namespace = 'leftNav';\n    var leftNavIsOpen = 'leftnav-is-open';\n    var leftNavActive = 'leftnav-active';\n\n    var $leftNavOpen;\n    var $leftNavMenu;\n    var $leftNavItems;\n    var $toolbar;\n    var $topbar;\n    var $sidebar;\n    var $sidebarContainer;\n    var $sections;\n    var $footer;\n\n    var topTrigger;\n    var topSpacing;\n    var bottomSpacing;\n    var maxScrollTime = 1000;\n\n    var isMobile;\n\n    // Open the Navigation menu - only done in mobile.\n    function openNav() {\n      $leftNavOpen.addClass(leftNavIsOpen);\n      $leftNavMenu.addClass(leftNavIsOpen);\n      $leftNavMenu.find('li:eq(0) a').focus();\n    }\n\n    // Close the navigation menu\n    function closeNav() {\n      $leftNavOpen.removeClass(leftNavIsOpen);\n      $leftNavMenu.removeClass(leftNavIsOpen);\n    }\n\n    // Initialize the Navigation behaviors\n    function init(context) {\n      $toolbar = $('#toolbar-bar');\n      $topbar = $('#site-header');\n      $footer = $('.field--type-comment');\n      $sidebarContainer = $(context).find('#content-sidebar-container');\n      $sidebar = $(context).find('.content-sidebar');\n      $leftNavOpen = $(context).find('.leftnav-open');\n      $leftNavMenu = $(context).find('.leftnav-menu');\n      $leftNavItems = $leftNavMenu.find('li');\n      $sections = $(context).find('.leftnav-section');\n\n      // Desktop mediaquery event listener - Open nav menu (always open on desktop).\n      $(window).on('desktop.' + namespace, function (e) {\n        openNav(e);\n      });\n\n      // Mobile mediaquery event listener - Initially close the nav menu.\n      $(window).on('mobile.' + namespace, function (e) {\n        closeNav(e);\n      });\n\n      // Nav menu open button event listener - User selects \"Jump to a Section\" button.\n      $leftNavOpen.on('click', function (e) {\n        e.preventDefault();\n        if ($leftNavMenu.hasClass(leftNavIsOpen)) {\n          closeNav(e);\n        }\n        else {\n          openNav(e);\n        }\n      });\n\n      // Search for a nav menu item with a href of: '#' + id\n      function selectMenuItem(id) {\n        $leftNavMenu.find('li').removeClass(leftNavActive);\n        for (var i = 0; i < $leftNavItems.length; i++) {\n          var $item = $($leftNavItems[i]);\n          var href = $item.find('a').attr('href');\n          if (href === '#' + id) {\n            $item.addClass(leftNavActive);\n            break;\n          }\n        }\n      }\n\n      // Set the height of the sidebar container = to height of sidebar container contents.\n      // Holds space when sidebar contents become fixed.\n      function setSidebarContainerDims() {\n        $sidebarContainer.height($sidebar.outerHeight());\n      }\n\n      // Listen for window resize events.\n      window.addEventListener('resize', function () {\n        setSidebarContainerDims();\n      });\n\n      // Mobile mode.\n      $(window).on('mobile.' + namespace, function () {\n        isMobile = true;\n        topSpacing = $topbar.height() + $leftNavOpen.outerHeight() + 10;\n        topTrigger = $topbar.height();\n        setCurrentLocation();\n      });\n\n      // Desktop mode.\n      $(window).on('desktop.' + namespace, function (context) {\n        isMobile = false;\n        topTrigger = $topbar.height() + 75;\n        topSpacing = $topbar.height() + 75;\n        bottomSpacing = 50;\n        setCurrentLocation();\n      });\n\n      // Listen for scroll events.\n      $(window).scroll(function () {\n        setCurrentLocation();\n      });\n\n      // From current location fix/unfix sidebar nav, indicate current section.\n      function setCurrentLocation() {\n        var scrollTop = $(window).scrollTop();\n\n        // Fix the sidebar to the top when scrolling.\n        if (scrollTop >= $sidebarContainer.offset().top - topTrigger) {\n          $sidebar.addClass('content-sidebar-fixed');\n        }\n        else {\n          $sidebar.removeClass('content-sidebar-fixed');\n        }\n\n        // Look for when the bottom of the .content-container is within bottomSpacing of the bottom of the nav sidebar.\n        if (scrollTop + $sidebar[0].offsetTop + $sidebar[0].offsetHeight + bottomSpacing >= $footer[0].offsetTop) {\n          $sidebar.addClass('content-sidebar-bottom');\n        }\n        else {\n          $sidebar.removeClass('content-sidebar-bottom');\n        }\n\n        // Find menu item currently displayed in viewport.\n        var s;\n        var sb;\n        for (s = 0; s < $sections.length; s++) {\n          var section = $sections[s];\n          sb = $sections.length - 1;\n          if (scrollTop < section.offsetTop - topSpacing - 10) {\n            sb = (s === 0) ? 0 : s - 1;\n            break;\n          }\n        }\n        // Set text in Open button to currently displayed menu item.\n        if (s !== 0) {\n          var i = (sb > $leftNavItems.length - 1) ? $leftNavItems.length - 1 : sb;\n          $leftNavOpen.text($leftNavItems[i].innerText);\n        }\n        // Set class on menu item for currently displayed section.\n        selectMenuItem($sections[sb].id);\n      }\n\n      function scrollToSection(target) {\n        var newTop;\n        if (isMobile) {\n          var offset = 10 + $leftNavOpen.outerHeight(true) + $topbar.outerHeight(true);\n          if ($toolbar && $('body').hasClass('toolbar-fixed')) {\n            offset += $toolbar.height();\n          }\n          newTop = $(target.hash).offset().top - offset;\n        }\n        else {\n          newTop = $(target.hash).offset().top - 165;\n        }\n        var distance = Math.abs(newTop - $(window).scrollTop());\n        var scrollTime = (distance < maxScrollTime) ? distance : maxScrollTime;\n\n        $('html, body').animate({scrollTop: newTop + 'px'}, {duration: scrollTime, easing: 'swing'});\n      }\n\n      // Event - User clicks on nav item - scroll to selected section and close nav menu.\n      $leftNavMenu.find('a').click(function (e) {\n        e.preventDefault();\n        scrollToSection(e.target);\n\n        if (isMobile) {\n          closeNav();\n        }\n      }).on('keydown', function (e) { // User presses ENTER button\n        if (e.keyCode === 13) {\n          e.preventDefault();\n          scrollToSection(e.target);\n          $(e.target.hash).find('.back-to-menu-anchor').focus();\n\n          if (isMobile) {\n            closeNav();\n          }\n        }\n      });\n\n      setSidebarContainerDims();\n\n      // Initially select the first nav menu item and its related content section.\n      var $firstMenuItem = $leftNavMenu.find('li').first();\n      $firstMenuItem.addClass(leftNavActive);\n      $sections.first().addClass(leftNavActive);\n\n      // focus first menu item on \"back to menu\" link (assessibility/desktop)\n      $('.back-to-menu-anchor').on('keydown', function (e) {\n        if (e.keyCode === 13) {\n          e.preventDefault();\n          $firstMenuItem.find('a').focus();\n        }\n      });\n    }\n\n    return {\n      init: init\n    };\n  }; // function Drupal.leftNavC - function wrapper to make variables local.\n\n  Drupal.behaviors.leftNav = {\n    attach: function (context, settings) {\n      $(context).find('.left-nav, .application-requirements').once('leftNav').each(function () {\n        if (!Drupal.leftNav) {\n          Drupal.leftNav = Drupal.leftNavC();\n        }\n        Drupal.leftNav.init(this);\n      });\n    }\n  };\n\n}(jQuery));\n\n"],"names":["$","Drupal","leftNavC","$leftNavOpen","$leftNavMenu","$leftNavItems","$toolbar","$topbar","$sidebar","$sidebarContainer","$sections","$footer","topTrigger","topSpacing","bottomSpacing","isMobile","namespace","leftNavIsOpen","leftNavActive","openNav","addClass","find","focus","closeNav","removeClass","init","context","setSidebarContainerDims","height","outerHeight","setCurrentLocation","s","i","scrollTop","window","offset","top","offsetTop","offsetHeight","length","section","sb","text","innerText","selectMenuItem","id","$item","attr","scrollToSection","target","newTop","hasClass","hash","distance","Math","abs","scrollTime","animate","duration","easing","on","e","preventDefault","addEventListener","scroll","click","keyCode","$firstMenuItem","first","behaviors","leftNav","attach","settings","once","each","this","jQuery"],"mappings":"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"}